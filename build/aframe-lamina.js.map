{"version":3,"file":"aframe-lamina.js","sources":["../node_modules/glsl-tokenizer/lib/literals.js","../node_modules/glsl-tokenizer/lib/operators.js","../node_modules/glsl-tokenizer/lib/builtins.js","../node_modules/glsl-tokenizer/lib/literals-300es.js","../node_modules/glsl-tokenizer/lib/builtins-300es.js","../node_modules/glsl-tokenizer/index.js","../node_modules/glsl-tokenizer/string.js","../node_modules/glsl-token-depth/index.js","../node_modules/glsl-token-scope/index.js","../node_modules/glsl-token-properties/index.js","../node_modules/glsl-token-assignments/assignments.js","../node_modules/glsl-token-assignments/ignored.js","../node_modules/glsl-token-assignments/index.js","../node_modules/glsl-token-descope/index.js","../node_modules/glsl-token-string/index.js","../node_modules/glsl-token-functions/index.js","../node_modules/three-custom-shader-material/vanilla.js","../node_modules/lamina/vanilla.js","../src/aframe-lamina.js"],"sourcesContent":["module.exports = [\r\n  // current\r\n    'precision'\r\n  , 'highp'\r\n  , 'mediump'\r\n  , 'lowp'\r\n  , 'attribute'\r\n  , 'const'\r\n  , 'uniform'\r\n  , 'varying'\r\n  , 'break'\r\n  , 'continue'\r\n  , 'do'\r\n  , 'for'\r\n  , 'while'\r\n  , 'if'\r\n  , 'else'\r\n  , 'in'\r\n  , 'out'\r\n  , 'inout'\r\n  , 'float'\r\n  , 'int'\r\n  , 'uint'\r\n  , 'void'\r\n  , 'bool'\r\n  , 'true'\r\n  , 'false'\r\n  , 'discard'\r\n  , 'return'\r\n  , 'mat2'\r\n  , 'mat3'\r\n  , 'mat4'\r\n  , 'vec2'\r\n  , 'vec3'\r\n  , 'vec4'\r\n  , 'ivec2'\r\n  , 'ivec3'\r\n  , 'ivec4'\r\n  , 'bvec2'\r\n  , 'bvec3'\r\n  , 'bvec4'\r\n  , 'sampler1D'\r\n  , 'sampler2D'\r\n  , 'sampler3D'\r\n  , 'samplerCube'\r\n  , 'sampler1DShadow'\r\n  , 'sampler2DShadow'\r\n  , 'struct'\r\n\r\n  // future\r\n  , 'asm'\r\n  , 'class'\r\n  , 'union'\r\n  , 'enum'\r\n  , 'typedef'\r\n  , 'template'\r\n  , 'this'\r\n  , 'packed'\r\n  , 'goto'\r\n  , 'switch'\r\n  , 'default'\r\n  , 'inline'\r\n  , 'noinline'\r\n  , 'volatile'\r\n  , 'public'\r\n  , 'static'\r\n  , 'extern'\r\n  , 'external'\r\n  , 'interface'\r\n  , 'long'\r\n  , 'short'\r\n  , 'double'\r\n  , 'half'\r\n  , 'fixed'\r\n  , 'unsigned'\r\n  , 'input'\r\n  , 'output'\r\n  , 'hvec2'\r\n  , 'hvec3'\r\n  , 'hvec4'\r\n  , 'dvec2'\r\n  , 'dvec3'\r\n  , 'dvec4'\r\n  , 'fvec2'\r\n  , 'fvec3'\r\n  , 'fvec4'\r\n  , 'sampler2DRect'\r\n  , 'sampler3DRect'\r\n  , 'sampler2DRectShadow'\r\n  , 'sizeof'\r\n  , 'cast'\r\n  , 'namespace'\r\n  , 'using'\r\n]\r\n","module.exports = [\r\n    '<<='\r\n  , '>>='\r\n  , '++'\r\n  , '--'\r\n  , '<<'\r\n  , '>>'\r\n  , '<='\r\n  , '>='\r\n  , '=='\r\n  , '!='\r\n  , '&&'\r\n  , '||'\r\n  , '+='\r\n  , '-='\r\n  , '*='\r\n  , '/='\r\n  , '%='\r\n  , '&='\r\n  , '^^'\r\n  , '^='\r\n  , '|='\r\n  , '('\r\n  , ')'\r\n  , '['\r\n  , ']'\r\n  , '.'\r\n  , '!'\r\n  , '~'\r\n  , '*'\r\n  , '/'\r\n  , '%'\r\n  , '+'\r\n  , '-'\r\n  , '<'\r\n  , '>'\r\n  , '&'\r\n  , '^'\r\n  , '|'\r\n  , '?'\r\n  , ':'\r\n  , '='\r\n  , ','\r\n  , ';'\r\n  , '{'\r\n  , '}'\r\n]\r\n","module.exports = [\r\n  // Keep this list sorted\r\n  'abs'\r\n  , 'acos'\r\n  , 'all'\r\n  , 'any'\r\n  , 'asin'\r\n  , 'atan'\r\n  , 'ceil'\r\n  , 'clamp'\r\n  , 'cos'\r\n  , 'cross'\r\n  , 'dFdx'\r\n  , 'dFdy'\r\n  , 'degrees'\r\n  , 'distance'\r\n  , 'dot'\r\n  , 'equal'\r\n  , 'exp'\r\n  , 'exp2'\r\n  , 'faceforward'\r\n  , 'floor'\r\n  , 'fract'\r\n  , 'gl_BackColor'\r\n  , 'gl_BackLightModelProduct'\r\n  , 'gl_BackLightProduct'\r\n  , 'gl_BackMaterial'\r\n  , 'gl_BackSecondaryColor'\r\n  , 'gl_ClipPlane'\r\n  , 'gl_ClipVertex'\r\n  , 'gl_Color'\r\n  , 'gl_DepthRange'\r\n  , 'gl_DepthRangeParameters'\r\n  , 'gl_EyePlaneQ'\r\n  , 'gl_EyePlaneR'\r\n  , 'gl_EyePlaneS'\r\n  , 'gl_EyePlaneT'\r\n  , 'gl_Fog'\r\n  , 'gl_FogCoord'\r\n  , 'gl_FogFragCoord'\r\n  , 'gl_FogParameters'\r\n  , 'gl_FragColor'\r\n  , 'gl_FragCoord'\r\n  , 'gl_FragData'\r\n  , 'gl_FragDepth'\r\n  , 'gl_FragDepthEXT'\r\n  , 'gl_FrontColor'\r\n  , 'gl_FrontFacing'\r\n  , 'gl_FrontLightModelProduct'\r\n  , 'gl_FrontLightProduct'\r\n  , 'gl_FrontMaterial'\r\n  , 'gl_FrontSecondaryColor'\r\n  , 'gl_LightModel'\r\n  , 'gl_LightModelParameters'\r\n  , 'gl_LightModelProducts'\r\n  , 'gl_LightProducts'\r\n  , 'gl_LightSource'\r\n  , 'gl_LightSourceParameters'\r\n  , 'gl_MaterialParameters'\r\n  , 'gl_MaxClipPlanes'\r\n  , 'gl_MaxCombinedTextureImageUnits'\r\n  , 'gl_MaxDrawBuffers'\r\n  , 'gl_MaxFragmentUniformComponents'\r\n  , 'gl_MaxLights'\r\n  , 'gl_MaxTextureCoords'\r\n  , 'gl_MaxTextureImageUnits'\r\n  , 'gl_MaxTextureUnits'\r\n  , 'gl_MaxVaryingFloats'\r\n  , 'gl_MaxVertexAttribs'\r\n  , 'gl_MaxVertexTextureImageUnits'\r\n  , 'gl_MaxVertexUniformComponents'\r\n  , 'gl_ModelViewMatrix'\r\n  , 'gl_ModelViewMatrixInverse'\r\n  , 'gl_ModelViewMatrixInverseTranspose'\r\n  , 'gl_ModelViewMatrixTranspose'\r\n  , 'gl_ModelViewProjectionMatrix'\r\n  , 'gl_ModelViewProjectionMatrixInverse'\r\n  , 'gl_ModelViewProjectionMatrixInverseTranspose'\r\n  , 'gl_ModelViewProjectionMatrixTranspose'\r\n  , 'gl_MultiTexCoord0'\r\n  , 'gl_MultiTexCoord1'\r\n  , 'gl_MultiTexCoord2'\r\n  , 'gl_MultiTexCoord3'\r\n  , 'gl_MultiTexCoord4'\r\n  , 'gl_MultiTexCoord5'\r\n  , 'gl_MultiTexCoord6'\r\n  , 'gl_MultiTexCoord7'\r\n  , 'gl_Normal'\r\n  , 'gl_NormalMatrix'\r\n  , 'gl_NormalScale'\r\n  , 'gl_ObjectPlaneQ'\r\n  , 'gl_ObjectPlaneR'\r\n  , 'gl_ObjectPlaneS'\r\n  , 'gl_ObjectPlaneT'\r\n  , 'gl_Point'\r\n  , 'gl_PointCoord'\r\n  , 'gl_PointParameters'\r\n  , 'gl_PointSize'\r\n  , 'gl_Position'\r\n  , 'gl_ProjectionMatrix'\r\n  , 'gl_ProjectionMatrixInverse'\r\n  , 'gl_ProjectionMatrixInverseTranspose'\r\n  , 'gl_ProjectionMatrixTranspose'\r\n  , 'gl_SecondaryColor'\r\n  , 'gl_TexCoord'\r\n  , 'gl_TextureEnvColor'\r\n  , 'gl_TextureMatrix'\r\n  , 'gl_TextureMatrixInverse'\r\n  , 'gl_TextureMatrixInverseTranspose'\r\n  , 'gl_TextureMatrixTranspose'\r\n  , 'gl_Vertex'\r\n  , 'greaterThan'\r\n  , 'greaterThanEqual'\r\n  , 'inversesqrt'\r\n  , 'length'\r\n  , 'lessThan'\r\n  , 'lessThanEqual'\r\n  , 'log'\r\n  , 'log2'\r\n  , 'matrixCompMult'\r\n  , 'max'\r\n  , 'min'\r\n  , 'mix'\r\n  , 'mod'\r\n  , 'normalize'\r\n  , 'not'\r\n  , 'notEqual'\r\n  , 'pow'\r\n  , 'radians'\r\n  , 'reflect'\r\n  , 'refract'\r\n  , 'sign'\r\n  , 'sin'\r\n  , 'smoothstep'\r\n  , 'sqrt'\r\n  , 'step'\r\n  , 'tan'\r\n  , 'texture2D'\r\n  , 'texture2DLod'\r\n  , 'texture2DProj'\r\n  , 'texture2DProjLod'\r\n  , 'textureCube'\r\n  , 'textureCubeLod'\r\n  , 'texture2DLodEXT'\r\n  , 'texture2DProjLodEXT'\r\n  , 'textureCubeLodEXT'\r\n  , 'texture2DGradEXT'\r\n  , 'texture2DProjGradEXT'\r\n  , 'textureCubeGradEXT'\r\n]\r\n","var v100 = require('./literals')\r\n\r\nmodule.exports = v100.slice().concat([\r\n   'layout'\r\n  , 'centroid'\r\n  , 'smooth'\r\n  , 'case'\r\n  , 'mat2x2'\r\n  , 'mat2x3'\r\n  , 'mat2x4'\r\n  , 'mat3x2'\r\n  , 'mat3x3'\r\n  , 'mat3x4'\r\n  , 'mat4x2'\r\n  , 'mat4x3'\r\n  , 'mat4x4'\r\n  , 'uvec2'\r\n  , 'uvec3'\r\n  , 'uvec4'\r\n  , 'samplerCubeShadow'\r\n  , 'sampler2DArray'\r\n  , 'sampler2DArrayShadow'\r\n  , 'isampler2D'\r\n  , 'isampler3D'\r\n  , 'isamplerCube'\r\n  , 'isampler2DArray'\r\n  , 'usampler2D'\r\n  , 'usampler3D'\r\n  , 'usamplerCube'\r\n  , 'usampler2DArray'\r\n  , 'coherent'\r\n  , 'restrict'\r\n  , 'readonly'\r\n  , 'writeonly'\r\n  , 'resource'\r\n  , 'atomic_uint'\r\n  , 'noperspective'\r\n  , 'patch'\r\n  , 'sample'\r\n  , 'subroutine'\r\n  , 'common'\r\n  , 'partition'\r\n  , 'active'\r\n  , 'filter'\r\n  , 'image1D'\r\n  , 'image2D'\r\n  , 'image3D'\r\n  , 'imageCube'\r\n  , 'iimage1D'\r\n  , 'iimage2D'\r\n  , 'iimage3D'\r\n  , 'iimageCube'\r\n  , 'uimage1D'\r\n  , 'uimage2D'\r\n  , 'uimage3D'\r\n  , 'uimageCube'\r\n  , 'image1DArray'\r\n  , 'image2DArray'\r\n  , 'iimage1DArray'\r\n  , 'iimage2DArray'\r\n  , 'uimage1DArray'\r\n  , 'uimage2DArray'\r\n  , 'image1DShadow'\r\n  , 'image2DShadow'\r\n  , 'image1DArrayShadow'\r\n  , 'image2DArrayShadow'\r\n  , 'imageBuffer'\r\n  , 'iimageBuffer'\r\n  , 'uimageBuffer'\r\n  , 'sampler1DArray'\r\n  , 'sampler1DArrayShadow'\r\n  , 'isampler1D'\r\n  , 'isampler1DArray'\r\n  , 'usampler1D'\r\n  , 'usampler1DArray'\r\n  , 'isampler2DRect'\r\n  , 'usampler2DRect'\r\n  , 'samplerBuffer'\r\n  , 'isamplerBuffer'\r\n  , 'usamplerBuffer'\r\n  , 'sampler2DMS'\r\n  , 'isampler2DMS'\r\n  , 'usampler2DMS'\r\n  , 'sampler2DMSArray'\r\n  , 'isampler2DMSArray'\r\n  , 'usampler2DMSArray'\r\n])\r\n","// 300es builtins/reserved words that were previously valid in v100\r\nvar v100 = require('./builtins')\r\n\r\n// The texture2D|Cube functions have been removed\r\n// And the gl_ features are updated\r\nv100 = v100.slice().filter(function (b) {\r\n  return !/^(gl\\_|texture)/.test(b)\r\n})\r\n\r\nmodule.exports = v100.concat([\r\n  // the updated gl_ constants\r\n    'gl_VertexID'\r\n  , 'gl_InstanceID'\r\n  , 'gl_Position'\r\n  , 'gl_PointSize'\r\n  , 'gl_FragCoord'\r\n  , 'gl_FrontFacing'\r\n  , 'gl_FragDepth'\r\n  , 'gl_PointCoord'\r\n  , 'gl_MaxVertexAttribs'\r\n  , 'gl_MaxVertexUniformVectors'\r\n  , 'gl_MaxVertexOutputVectors'\r\n  , 'gl_MaxFragmentInputVectors'\r\n  , 'gl_MaxVertexTextureImageUnits'\r\n  , 'gl_MaxCombinedTextureImageUnits'\r\n  , 'gl_MaxTextureImageUnits'\r\n  , 'gl_MaxFragmentUniformVectors'\r\n  , 'gl_MaxDrawBuffers'\r\n  , 'gl_MinProgramTexelOffset'\r\n  , 'gl_MaxProgramTexelOffset'\r\n  , 'gl_DepthRangeParameters'\r\n  , 'gl_DepthRange'\r\n\r\n  // other builtins\r\n  , 'trunc'\r\n  , 'round'\r\n  , 'roundEven'\r\n  , 'isnan'\r\n  , 'isinf'\r\n  , 'floatBitsToInt'\r\n  , 'floatBitsToUint'\r\n  , 'intBitsToFloat'\r\n  , 'uintBitsToFloat'\r\n  , 'packSnorm2x16'\r\n  , 'unpackSnorm2x16'\r\n  , 'packUnorm2x16'\r\n  , 'unpackUnorm2x16'\r\n  , 'packHalf2x16'\r\n  , 'unpackHalf2x16'\r\n  , 'outerProduct'\r\n  , 'transpose'\r\n  , 'determinant'\r\n  , 'inverse'\r\n  , 'texture'\r\n  , 'textureSize'\r\n  , 'textureProj'\r\n  , 'textureLod'\r\n  , 'textureOffset'\r\n  , 'texelFetch'\r\n  , 'texelFetchOffset'\r\n  , 'textureProjOffset'\r\n  , 'textureLodOffset'\r\n  , 'textureProjLod'\r\n  , 'textureProjLodOffset'\r\n  , 'textureGrad'\r\n  , 'textureGradOffset'\r\n  , 'textureProjGrad'\r\n  , 'textureProjGradOffset'\r\n])\r\n","module.exports = tokenize\r\n\r\nvar literals100 = require('./lib/literals')\r\n  , operators = require('./lib/operators')\r\n  , builtins100 = require('./lib/builtins')\r\n  , literals300es = require('./lib/literals-300es')\r\n  , builtins300es = require('./lib/builtins-300es')\r\n\r\nvar NORMAL = 999          // <-- never emitted\r\n  , TOKEN = 9999          // <-- never emitted\r\n  , BLOCK_COMMENT = 0\r\n  , LINE_COMMENT = 1\r\n  , PREPROCESSOR = 2\r\n  , OPERATOR = 3\r\n  , INTEGER = 4\r\n  , FLOAT = 5\r\n  , IDENT = 6\r\n  , BUILTIN = 7\r\n  , KEYWORD = 8\r\n  , WHITESPACE = 9\r\n  , EOF = 10\r\n  , HEX = 11\r\n\r\nvar map = [\r\n    'block-comment'\r\n  , 'line-comment'\r\n  , 'preprocessor'\r\n  , 'operator'\r\n  , 'integer'\r\n  , 'float'\r\n  , 'ident'\r\n  , 'builtin'\r\n  , 'keyword'\r\n  , 'whitespace'\r\n  , 'eof'\r\n  , 'integer'\r\n]\r\n\r\nfunction tokenize(opt) {\r\n  var i = 0\r\n    , total = 0\r\n    , mode = NORMAL\r\n    , c\r\n    , last\r\n    , content = []\r\n    , tokens = []\r\n    , token_idx = 0\r\n    , token_offs = 0\r\n    , line = 1\r\n    , col = 0\r\n    , start = 0\r\n    , isnum = false\r\n    , isoperator = false\r\n    , input = ''\r\n    , len\r\n\r\n  opt = opt || {}\r\n  var allBuiltins = builtins100\r\n  var allLiterals = literals100\r\n  if (opt.version === '300 es') {\r\n    allBuiltins = builtins300es\r\n    allLiterals = literals300es\r\n  }\r\n\r\n  // cache by name\r\n  var builtinsDict = {}, literalsDict = {}\r\n  for (var i = 0; i < allBuiltins.length; i++) {\r\n    builtinsDict[allBuiltins[i]] = true\r\n  }\r\n  for (var i = 0; i < allLiterals.length; i++) {\r\n    literalsDict[allLiterals[i]] = true\r\n  }\r\n\r\n  return function(data) {\r\n    tokens = []\r\n    if (data !== null) return write(data)\r\n    return end()\r\n  }\r\n\r\n  function token(data) {\r\n    if (data.length) {\r\n      tokens.push({\r\n        type: map[mode]\r\n      , data: data\r\n      , position: start\r\n      , line: line\r\n      , column: col\r\n      })\r\n    }\r\n  }\r\n\r\n  function write(chunk) {\r\n    i = 0\r\n\r\n    if (chunk.toString) chunk = chunk.toString()\r\n\r\n    input += chunk.replace(/\\r\\n/g, '\\n')\r\n    len = input.length\r\n\r\n\r\n    var last\r\n\r\n    while(c = input[i], i < len) {\r\n      last = i\r\n\r\n      switch(mode) {\r\n        case BLOCK_COMMENT: i = block_comment(); break\r\n        case LINE_COMMENT: i = line_comment(); break\r\n        case PREPROCESSOR: i = preprocessor(); break\r\n        case OPERATOR: i = operator(); break\r\n        case INTEGER: i = integer(); break\r\n        case HEX: i = hex(); break\r\n        case FLOAT: i = decimal(); break\r\n        case TOKEN: i = readtoken(); break\r\n        case WHITESPACE: i = whitespace(); break\r\n        case NORMAL: i = normal(); break\r\n      }\r\n\r\n      if(last !== i) {\r\n        switch(input[last]) {\r\n          case '\\n': col = 0; ++line; break\r\n          default: ++col; break\r\n        }\r\n      }\r\n    }\r\n\r\n    total += i\r\n    input = input.slice(i)\r\n    return tokens\r\n  }\r\n\r\n  function end(chunk) {\r\n    if(content.length) {\r\n      token(content.join(''))\r\n    }\r\n\r\n    mode = EOF\r\n    token('(eof)')\r\n    return tokens\r\n  }\r\n\r\n  function normal() {\r\n    content = content.length ? [] : content\r\n\r\n    if(last === '/' && c === '*') {\r\n      start = total + i - 1\r\n      mode = BLOCK_COMMENT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(last === '/' && c === '/') {\r\n      start = total + i - 1\r\n      mode = LINE_COMMENT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(c === '#') {\r\n      mode = PREPROCESSOR\r\n      start = total + i\r\n      return i\r\n    }\r\n\r\n    if(/\\s/.test(c)) {\r\n      mode = WHITESPACE\r\n      start = total + i\r\n      return i\r\n    }\r\n\r\n    isnum = /\\d/.test(c)\r\n    isoperator = /[^\\w_]/.test(c)\r\n\r\n    start = total + i\r\n    mode = isnum ? INTEGER : isoperator ? OPERATOR : TOKEN\r\n    return i\r\n  }\r\n\r\n  function whitespace() {\r\n    if(/[^\\s]/g.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function preprocessor() {\r\n    if((c === '\\r' || c === '\\n') && last !== '\\\\') {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function line_comment() {\r\n    return preprocessor()\r\n  }\r\n\r\n  function block_comment() {\r\n    if(c === '/' && last === '*') {\r\n      content.push(c)\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i + 1\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function operator() {\r\n    if(last === '.' && /\\d/.test(c)) {\r\n      mode = FLOAT\r\n      return i\r\n    }\r\n\r\n    if(last === '/' && c === '*') {\r\n      mode = BLOCK_COMMENT\r\n      return i\r\n    }\r\n\r\n    if(last === '/' && c === '/') {\r\n      mode = LINE_COMMENT\r\n      return i\r\n    }\r\n\r\n    if(c === '.' && content.length) {\r\n      while(determine_operator(content));\r\n\r\n      mode = FLOAT\r\n      return i\r\n    }\r\n\r\n    if(c === ';' || c === ')' || c === '(') {\r\n      if(content.length) while(determine_operator(content));\r\n      token(c)\r\n      mode = NORMAL\r\n      return i + 1\r\n    }\r\n\r\n    var is_composite_operator = content.length === 2 && c !== '='\r\n    if(/[\\w_\\d\\s]/.test(c) || is_composite_operator) {\r\n      while(determine_operator(content));\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function determine_operator(buf) {\r\n    var j = 0\r\n      , idx\r\n      , res\r\n\r\n    do {\r\n      idx = operators.indexOf(buf.slice(0, buf.length + j).join(''))\r\n      res = operators[idx]\r\n\r\n      if(idx === -1) {\r\n        if(j-- + buf.length > 0) continue\r\n        res = buf.slice(0, 1).join('')\r\n      }\r\n\r\n      token(res)\r\n\r\n      start += res.length\r\n      content = content.slice(res.length)\r\n      return content.length\r\n    } while(1)\r\n  }\r\n\r\n  function hex() {\r\n    if(/[^a-fA-F0-9]/.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function integer() {\r\n    if(c === '.') {\r\n      content.push(c)\r\n      mode = FLOAT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(/[eE]/.test(c)) {\r\n      content.push(c)\r\n      mode = FLOAT\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(c === 'x' && content.length === 1 && content[0] === '0') {\r\n      mode = HEX\r\n      content.push(c)\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(/[^\\d]/.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function decimal() {\r\n    if(c === 'f') {\r\n      content.push(c)\r\n      last = c\r\n      i += 1\r\n    }\r\n\r\n    if(/[eE]/.test(c)) {\r\n      content.push(c)\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if ((c === '-' || c === '+') && /[eE]/.test(last)) {\r\n      content.push(c)\r\n      last = c\r\n      return i + 1\r\n    }\r\n\r\n    if(/[^\\d]/.test(c)) {\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n\r\n  function readtoken() {\r\n    if(/[^\\d\\w_]/.test(c)) {\r\n      var contentstr = content.join('')\r\n      if(literalsDict[contentstr]) {\r\n        mode = KEYWORD\r\n      } else if(builtinsDict[contentstr]) {\r\n        mode = BUILTIN\r\n      } else {\r\n        mode = IDENT\r\n      }\r\n      token(content.join(''))\r\n      mode = NORMAL\r\n      return i\r\n    }\r\n    content.push(c)\r\n    last = c\r\n    return i + 1\r\n  }\r\n}\r\n","var tokenize = require('./index')\r\n\r\nmodule.exports = tokenizeString\r\n\r\nfunction tokenizeString(str, opt) {\r\n  var generator = tokenize(opt)\r\n  var tokens = []\r\n\r\n  tokens = tokens.concat(generator(str))\r\n  tokens = tokens.concat(generator(null))\r\n\r\n  return tokens\r\n}\r\n","module.exports = getTokenDepth\n\nfunction getTokenDepth(tokens) {\n  var loop  = false\n  var depth = 0\n\n  for (var i = 0; i < tokens.length; i++) {\n    loop = loop || (tokens[i].type === 'keyword' && (\n      tokens[i].data === 'for'\n    ))\n\n    switch (tokens[i].data) {\n      case '(': tokens[i].depth = loop ? depth++ : depth; break\n      case '{': tokens[i].depth = loop ? depth : depth++; loop = false; break\n      case '}': tokens[i].depth = --depth; break\n      default:  tokens[i].depth = depth\n    }\n  }\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var index = i + 1\n    if (token.type !== 'ident' && token.type !== 'keyword') continue\n    skipArrayArguments()\n    if (tokens[index].type !== 'ident') continue\n    skipArrayArguments()\n    index++\n    if (tokens[index].data !== '(') continue\n\n    while (tokens[index] && tokens[index].data !== ';' && tokens[index].data !== '{') {\n      tokens[index++].depth++\n    }\n    if (tokens[index] && tokens[index].data === '{') tokens[index].depth++\n  }\n\n  return tokens\n\n  function skipArrayArguments() {\n    while (tokens[index] && (\n      tokens[index].type === 'whitespace' ||\n      tokens[index].data === '[' ||\n      tokens[index].data === ']' ||\n      tokens[index].data === 'integer'\n    )) index++\n  }\n}\n","module.exports = tokenScope\n\nfunction tokenScope(tokens) {\n  var stack  = [0]\n  var inc    = stack[0]\n  var ldepth = 0\n\n  if (!tokens || !tokens.length) return tokens\n  if (!('depth' in tokens[0])) {\n    throw new Error('glsl-token-scope: No scope depth defined on tokens! Use glsl-token-depth on these tokens first')\n  }\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var depth = token.depth\n\n    if (depth > ldepth) {\n      stack.push(++inc)\n    } else\n    if (depth < ldepth) {\n      stack.splice(-1, 1)\n    }\n\n    token.scope = stack[stack.length - 1]\n    token.stack = stack.slice()\n    ldepth = token.depth\n  }\n\n  return tokens\n}\n","module.exports = properties\n\nfunction properties(tokens) {\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    token.property = false\n\n    if (token.type !== 'ident') continue\n\n    var j = i\n    while (tokens[--j] && tokens[j].type === 'whitespace');\n    if (!tokens[j]) continue\n    if (tokens[j].type !== 'operator') continue\n    if (tokens[j].data !== '.') continue\n\n    token.property = true\n  }\n\n  return tokens\n}\n","module.exports = {\n    '<<=': true\n  , '>>=': true\n  , '++': true\n  , '--': true\n  , '+=': true\n  , '-=': true\n  , '*=': true\n  , '/=': true\n  , '%=': true\n  , '&=': true\n  , '^=': true\n  , '|=': true\n  , '=': true\n}\n","module.exports = {\n    'precision': true\n  , 'highp': true\n  , 'mediump': true\n  , 'lowp': true\n  , 'attribute': true\n  , 'const': true\n  , 'uniform': true\n  , 'varying': true\n  , 'break': true\n  , 'continue': true\n  , 'do': true\n  , 'for': true\n  , 'while': true\n  , 'if': true\n  , 'else': true\n  , 'in': true\n  , 'out': true\n  , 'inout': true\n  , 'true': true\n  , 'false': true\n  , 'return': true\n}\n","var assignments = require('./assignments')\nvar ignoredKeywords = require('./ignored')\n\nmodule.exports = assigns\n\n// Here be dragons. Apologies in advance for the hairy code!\nfunction assigns(tokens) {\n  var idx = 0\n\n  // Determine if a value has been assigned, e.g.\n  // x = 1.0;\n  // float x = 1.0;\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var type  = token.type\n\n    token.assignment = false\n    token.declaration = false\n    if (type !== 'ident' && type !== 'builtin') continue\n    idx = i + 1\n\n    skipWhitespace(+1)\n    if (tokens[idx].type !== 'operator') continue\n    if (!assignments[tokens[idx].data]) continue\n    token.assignment = true\n  }\n\n  // Determine if a value is being defined, e.g.\n  // float x;\n  // float x, y, z;\n  // float x, y = vec3(sin(1.0 + 3.0)), z;\n  // float[3][2] x, y = vec3(sin(1.0 + 3.0)), z;\n  // float[][2] x, y = vec3(sin(1.0 + 3.0)), z;\n  // float x[2], y = vec3(sin(1.0 + 3.0)), z[4];\n  // float x(float y, float z) {};\n  // float x(float y[2], Thing[3] z) {};\n  // Thing x[2], y = Another(sin(1.0 + 3.0)), z[4];\n  for (var i = 0; i < tokens.length; i++) {\n    var datatype = tokens[i]\n    var type     = datatype.type\n    var data     = datatype.data\n\n    datatype.declaration = false\n\n    if (type === 'keyword') {\n      if (ignoredKeywords[data]) continue\n    } else\n    if (type !== 'ident') continue\n\n    idx = i + 1\n\n    skipArrayDimensions()\n    if (tokens[idx].type !== 'ident') continue\n    tokens[idx++].declaration = true\n    skipArrayDimensions()\n\n    // Function arguments/parameters\n    if (tokens[idx].data === '(') {\n      idx++\n\n      skipWhitespace(+1)\n      while (tokens[idx] && tokens[idx].data !== ')') {\n        if (tokens[idx].type !== 'keyword' && tokens[idx].type !== 'ident') break\n        idx++\n        skipWhitespace(+1)\n        if (tokens[idx].type !== 'ident') continue\n        tokens[idx++].declaration = true\n        skipWhitespace(+1)\n        skipArrayDimensions()\n        skipWhitespace(+1)\n        if (tokens[idx].data !== ',') continue\n        idx++\n        skipWhitespace(+1)\n      }\n\n      i = idx\n      continue\n    }\n\n    // Declaration Lists\n    while (tokens[idx] && tokens[idx].data !== ';') {\n      if (tokens[idx].data === ',') {\n        idx++\n        skipWhitespace(+1)\n        if (tokens[idx].declaration = tokens[idx].type === 'ident') idx++\n      } else {\n        skipWhitespace(+1)\n        skipParens()\n        skipWhitespace(+1)\n        idx++\n      }\n    }\n\n    i = idx\n  }\n\n  // Handle struct declarations:\n  // struct declaration {\n  //   float x, y, z;\n  //   Other w;\n  // } declaration;\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    if (token.type !== 'keyword') continue\n    if (token.data !== 'struct') continue\n    idx = i + 1\n    skipWhitespace(+1)\n    if (tokens[idx].type !== 'ident') continue\n\n    idx++\n    skipWhitespace(+1)\n    if (tokens[idx++].data !== '{') continue\n    skipWhitespace(+1)\n\n    while (tokens[idx].type === 'ident' || tokens[idx].type === 'keyword') {\n      do {\n        idx++\n        skipWhitespace(+1)\n        tokens[idx].structMember = true\n        tokens[idx].declaration = false\n        idx++\n        skipArrayDimensions()\n      } while (tokens[idx].data === ',')\n\n      if (tokens[idx].data === ';') idx++\n      skipWhitespace()\n    }\n\n    idx++\n    skipWhitespace(+1)\n    if (tokens[idx].type !== 'ident') continue\n    tokens[idx].declaration = true\n    skipWhitespace(+1)\n\n    while (tokens[++idx].data === ',') {\n      skipWhitespace(+1)\n      idx++\n      skipWhitespace(+1)\n      if (tokens[idx].type === 'ident') tokens[idx].declaration = true\n      skipWhitespace(+1)\n    }\n  }\n\n  return tokens\n\n  function skipWhitespace(n) {\n    while (tokens[idx] && tokens[idx].type === 'whitespace') idx++\n  }\n\n  function skipArrayDimensions() {\n    while (tokens[idx] && (\n         tokens[idx].type === 'integer'\n      || tokens[idx].data === '['\n      || tokens[idx].data === ']'\n      || tokens[idx].type === 'whitespace'\n    )) idx++\n  }\n\n  function skipParens() {\n    if (!tokens[idx]) return\n    if (tokens[idx].data !== '(') return\n    var depth = 0\n    var a = idx\n    do {\n      if (tokens[idx].data === ';') break\n      if (tokens[idx].data === '(') depth++\n      if (tokens[idx].data === ')') depth--\n    } while(depth && tokens[++idx])\n  }\n}\n","module.exports = glslTokenDescope\n\nfunction glslTokenDescope(tokens, rename) {\n  require('glsl-token-depth')(tokens)\n  require('glsl-token-scope')(tokens)\n  require('glsl-token-properties')(tokens)\n  require('glsl-token-assignments')(tokens)\n\n  var scope   = getScope(tokens)\n  var renamer = rename || defaultRenamer()\n  var map     = {}\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var stack = token.stack\n    var name  = token.data\n\n    token.descoped = false\n\n    if (token.type !== 'ident') continue\n    if (token.property) continue\n    if (token.structMember) continue\n\n    var bound = false\n\n    for (var j = stack.length - 1; j >= 0; j--) {\n      var s = scope[stack[j]]\n      if (!s) continue\n      if (!s[name]) continue\n\n      bound = true\n\n      // exit if declaration not in top-level scope\n      if (j) break\n\n      token.descoped = token.data\n      token.data = map[name] = map[name] || renamer(name, token) || token.data\n    }\n\n    // Handle unbound variables, i.e. ones not defined anywhere\n    // in the shader source but still used.\n    if (!bound) {\n      token.descoped = token.data\n      token.data = map[name] = map[name] || renamer(name, token) || token.data\n    }\n  }\n\n  return tokens\n}\n\nfunction defaultRenamer() {\n  var k = 0\n\n  return function rename(name) {\n    return name + '_' + (k++).toString(36)\n  }\n}\n\nfunction getScope(tokens) {\n  var scope = {}\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    if (token.declaration) {\n      scope[token.scope] = scope[token.scope] || {}\n      scope[token.scope][token.data] = token\n    }\n  }\n\n  return scope\n}\n","module.exports = toString\n\nfunction toString(tokens) {\n  var output = []\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].type === 'eof') continue\n    output.push(tokens[i].data)\n  }\n\n  return output.join('')\n}\n","module.exports = functions\n\nfunction functions (tokens) {\n  var returnType = null\n  var defnName = null\n  var braceDepth = 0\n  var braceStart = 0\n  var defnStart = 0\n  var argFinish = 0\n  var argStart = 0\n  var output = []\n  var i, j, token\n\n  // The following loop detects functions with bodies of any type,\n  // including structs. e.g.\n  // void main() {...}\n  // vec4 fn(vec3 a) {...}\n  // Ray3 fn(vec3 ro, vec3 rd) {...}\n  for (i = 0, j; i < tokens.length; i++) {\n    token = tokens[i]\n    if (token.data === '{') {\n      // If already in a function, keep track of opening braces\n      if (braceDepth && braceDepth++) continue\n\n      // Stepping backwards from the closing brace, find the end\n      // of the arguments list. There should only be whitespace on\n      // the way there.\n      j = findPrevious(i, findOp(')'), findOp())\n      if (j < 0) continue\n      argFinish = j\n\n      // Step backwards to find the beginning of the arguments list. If there's\n      // a nested paranthesis in there, then it's definitely not a function.\n      j = findPrevious(j, findOp('('), findOp(')'))\n      if (j < 0) continue\n      argStart = j\n\n      // Continue stepping backwards past any whitespace to find the\n      // function name. If the token isn't an identifier then it's not a\n      // function so we bail\n      j = findPrevious(j, findGlyph)\n      if (j < 0) continue\n      if (tokens[j].type !== 'ident') continue\n      defnName = tokens[j].data\n\n      // The next non-whitespace token should be the return type of\n      // the function\n      j = findPrevious(j, findGlyph)\n      if (j < 0) continue\n\n      braceDepth = 1\n      braceStart = i\n      returnType = tokens[j].data\n      defnStart = j\n\n      // There are cases when a function definition includes a\n      // precision qualifier, e.g. highp float random();\n      // So we backtrack one extra step to check if that's the\n      // case, and handle it :)\n      var k = findPrevious(j, findGlyph)\n      switch (tokens[k] && tokens[k].data) {\n        case 'lowp':\n        case 'highp':\n        case 'mediump':\n          defnStart = k\n      }\n    } else\n    if (braceDepth && token.data === '}') {\n      if (--braceDepth) continue\n\n      output.push({\n        name: defnName,\n        type: returnType,\n        body: [braceStart + 1, i],\n        args: [argStart, argFinish + 1],\n        outer: [defnStart, i + 1]\n      })\n    }\n  }\n\n  // This loop is for handling the edge case of functions defined\n  // without a body. Generally, this body is defined later in the file.\n  // void main();\n  // vec2 doModel(vec3 p);\n  // Note the replacement of curly braces with a semicolon.\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i]\n    if (token.data === ';') {\n      // Like before, we start from a semicolon and find the\n      // bounds of the argument list to find the function name\n      j = findPrevious(i, findOp(')'), findOp())\n      if (j < 0) continue\n      argFinish = j\n      j = findPrevious(j, findOp('('), findOp(')'))\n      if (j < 0) continue\n      argStart = j\n      j = findPrevious(j, findGlyph)\n      if (j < 0) continue\n      if (tokens[j].type !== 'ident') continue\n      defnName = tokens[j].data\n\n      // Try and find an ident or builtin character, which should be\n      // our return type. If so, it'll be the very first preceding glyph.\n      j = findPrevious(j, findGlyph)\n      if (j < 0) continue\n      if (tokens[j].type === 'operator') continue\n      if (tokens[j].data === 'return') continue\n      returnType = tokens[j].data\n\n      output.push({\n        name: defnName,\n        type: returnType,\n        body: false,\n        args: [argStart, argFinish + 1],\n        outer: [j, i + 1]\n      })\n    }\n  }\n\n  return output.sort(function (a, b) {\n    return a.outer[0] - b.outer[0]\n  })\n\n  function findPrevious (start, match, bail) {\n    for (var i = start - 1; i >= 0; i--) {\n      if (match(tokens[i])) return i\n      if (bail && bail(tokens[i])) return -1\n    }\n\n    return -1\n  }\n}\n\nfunction findOp (data) {\n  return function (token) {\n    return token.type === 'operator' && (!data || token.data === data)\n  }\n}\n\nfunction findGlyph (token) {\n  return token.type !== 'whitespace'\n}\n","import { Material } from 'three';\n\nvar keywords = {\n  positon: 'csm_Position',\n  emissive: 'csm_Emissive',\n  normal: 'csm_Normal',\n  pointSize: 'csm_PointSize',\n  diffuseColor: 'csm_DiffuseColor',\n  fragColor: 'csm_FragColor'\n};\n\nconst VERT = {\n  [`${keywords.normal}`]: {\n    '#include <defaultnormal_vertex>': `\n    vec3 transformedNormal = ${keywords.normal};\n    #ifdef USE_INSTANCING\n    \t// this is in lieu of a per-instance normal-matrix\n    \t// shear transforms in the instance matrix are not supported\n    \tmat3 m = mat3( instanceMatrix );\n    \ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n    \ttransformedNormal = m * transformedNormal;\n    #endif\n    transformedNormal = normalMatrix * transformedNormal;\n    #ifdef FLIP_SIDED\n    \ttransformedNormal = - transformedNormal;\n    #endif\n    #ifdef USE_TANGENT\n    \tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n    \t#ifdef FLIP_SIDED\n    \t\ttransformedTangent = - transformedTangent;\n    \t#endif\n    #endif\n    `\n  },\n  [`${keywords.positon}`]: {\n    '#include <project_vertex>': `\n    transformed = ${keywords.positon};\n    #include <project_vertex>\n  `\n  },\n  [`${keywords.pointSize}`]: {\n    'gl_PointSize = size;': `gl_PointSize = ${keywords.pointSize};`\n  }\n};\nconst FRAG = {\n  [`${keywords.diffuseColor}`]: {\n    '#include <color_fragment>': `\n    #include <color_fragment>\n    diffuseColor = ${keywords.diffuseColor};\n  `\n  },\n  [`${keywords.fragColor}`]: {\n    '#include <output_fragment>': `\n    #include <output_fragment>\n    gl_FragColor  = ${keywords.fragColor};\n  `\n  },\n  [`${keywords.emissive}`]: {\n    'vec3 totalEmissiveRadiance = emissive;': `\n    vec3 totalEmissiveRadiance = ${keywords.emissive};\n    `\n  }\n};\n\nclass CustomShaderMaterial extends Material {\n  constructor(baseMaterial, fragmentShader, vertexShader, uniforms, opts) {\n    // @ts-ignore\n    const base = new baseMaterial(opts);\n    super();\n    this.base = base;\n    this.uniforms = uniforms || {};\n\n    for (const key in this.base) {\n      // @ts-ignore\n      if (this[key] === undefined) this[key] = 0; // @ts-ignore\n\n      this[key] = this.base[key];\n    }\n\n    this.update(fragmentShader, vertexShader, uniforms);\n  }\n\n  update(fragmentShader, vertexShader, uniforms) {\n    this.generateMaterial(fragmentShader, vertexShader, uniforms);\n  }\n\n  generateMaterial(fragmentShader, vertexShader, uniforms) {\n    const parsedFragmentShdaer = this.parseShader(fragmentShader);\n    const parsedVertexShdaer = this.parseShader(vertexShader);\n    this.uniforms = uniforms || {};\n\n    this.customProgramCacheKey = () => {\n      return this.uuid;\n    };\n\n    this.onBeforeCompile = shader => {\n      if (parsedFragmentShdaer) {\n        const patchedFragmentShdaer = this.patchShader(parsedFragmentShdaer, shader.fragmentShader, FRAG);\n        shader.fragmentShader = patchedFragmentShdaer;\n      }\n\n      if (parsedVertexShdaer) {\n        const patchedVertexShdaer = this.patchShader(parsedVertexShdaer, shader.vertexShader, VERT);\n        shader.vertexShader = '#define IS_VERTEX;\\n' + patchedVertexShdaer;\n      }\n\n      shader.uniforms = { ...shader.uniforms,\n        ...this.uniforms\n      };\n      this.uniforms = shader.uniforms;\n      this.needsUpdate = true;\n    };\n  }\n\n  patchShader(customShader, shader, patchMap) {\n    let patchedShader = shader;\n    Object.keys(patchMap).forEach(name => {\n      Object.keys(patchMap[name]).forEach(key => {\n        if (customShader.main.includes(name)) {\n          patchedShader = replaceAll(patchedShader, key, patchMap[name][key]);\n        }\n      });\n    });\n    patchedShader = patchedShader.replace('void main() {', `\n          ${customShader.header}\n          void main() {\n            vec3 csm_Position;\n            vec3 csm_Normal;\n            vec3 csm_Emissive;\n\n            #ifdef IS_VERTEX\n              csm_Position = position;\n            #endif\n\n            #ifdef IS_VERTEX\n              csm_Normal = normal;\n            #endif\n            \n            #ifndef IS_VERTEX\n              #ifdef STANDARD\n                csm_Emissive = emissive;\n              #endif\n            #endif\n\n            vec4 csm_DiffuseColor = vec4(1., 0., 0., 1.);\n            vec4 csm_FragColor = vec4(1., 0., 0., 1.);\n            float csm_PointSize = 1.;\n\n            ${customShader.main}\n          `);\n    patchedShader = customShader.defines + patchedShader;\n    return patchedShader;\n  }\n\n  parseShader(shader) {\n    if (!shader) return;\n    const parsedShader = {\n      defines: '',\n      header: '',\n      main: ''\n    };\n    const main = shader.match(/void\\s*main\\s*\\w*\\s*\\([\\w\\s,]*\\)\\s*{([\\w\\W]*?)}/g);\n\n    if (main != null && main.length) {\n      const mainBody = main[0].match(/\\{((.|\\n)*?)\\}/g);\n\n      if (mainBody != null && mainBody.length) {\n        parsedShader.main = mainBody[0];\n      }\n\n      const rest = shader.replace(main[0], '');\n      const defines = rest.match(/#(.*?;)/g) || [];\n      const header = defines.reduce((prev, curr) => prev.replace(curr, ''), rest);\n      parsedShader.header = header;\n      parsedShader.defines = defines.join('\\n');\n    }\n\n    return parsedShader;\n  }\n\n}\n\nconst replaceAll = (str, find, rep) => str.split(find).join(rep);\n\nexport { CustomShaderMaterial as default };\n","import * as THREE from 'three';\nimport { Vector3, Vector2, Vector4, Matrix3, Matrix4, Color as Color$1, Texture as Texture$1, MathUtils } from 'three';\nimport tokenize from 'glsl-tokenizer';\nimport descope from 'glsl-token-descope';\nimport stringify from 'glsl-token-string';\nimport tokenFunctions from 'glsl-token-functions';\nimport CustomShaderMaterial from 'three-custom-shader-material/vanilla';\n\nfunction getUniform(value) {\n  if (typeof value === 'string') {\n    return new Color$1(value);\n  }\n\n  return value;\n}\nfunction getSpecialParameters(label) {\n  switch (label) {\n    case 'alpha':\n      return {\n        min: 0,\n        max: 1\n      };\n\n    case 'scale':\n      return {\n        min: 0\n      };\n\n    case 'map':\n      return {\n        image: undefined\n      };\n\n    default:\n      return {};\n  }\n}\nfunction isSerializableType(prop) {\n  return prop instanceof Vector3 || prop instanceof Vector2 || prop instanceof Vector4 || prop instanceof Matrix3 || prop instanceof Matrix4;\n}\nfunction serializeProp(prop) {\n  if (isSerializableType(prop)) {\n    return prop.toArray();\n  } else if (prop instanceof Color$1) {\n    return '#' + prop.clone().convertLinearToSRGB().getHexString();\n  } else if (prop instanceof Texture$1) {\n    return prop.image.src;\n  }\n\n  return prop;\n}\n\nconst BlendModes = {\n  normal: 'normal',\n  add: 'add',\n  subtract: 'subtract',\n  multiply: 'multiply',\n  lighten: 'lighten',\n  darken: 'darken',\n  divide: 'divide',\n  overlay: 'overlay',\n  screen: 'screen',\n  softlight: 'softlight',\n  negation: 'negation',\n  reflect: 'reflect'\n};\nconst NoiseTypes = {\n  perlin: 'perlin',\n  simplex: 'simplex',\n  cell: 'cell',\n  curl: 'curl',\n  white: 'white'\n};\nconst MappingTypes = {\n  local: 'local',\n  world: 'world',\n  uv: 'uv'\n};\nconst ShadingTypes = {\n  phong: THREE.MeshPhongMaterial,\n  physical: THREE.MeshPhysicalMaterial,\n  toon: THREE.MeshToonMaterial,\n  basic: THREE.MeshBasicMaterial,\n  lambert: THREE.MeshLambertMaterial,\n  standard: THREE.MeshStandardMaterial\n};\n\nclass Abstract {\n  constructor(c, props, onParse) {\n    this.uuid = MathUtils.generateUUID().replace(/-/g, '_');\n    this.name = 'LayerMaterial';\n    this.mode = 'normal';\n    this.visible = true;\n    const defaults = Object.getOwnPropertyNames(c).filter(e => e.startsWith('u_'));\n    const uniforms = defaults.reduce((a, v) => {\n      var _Object$getOwnPropert;\n\n      let value = (_Object$getOwnPropert = Object.getOwnPropertyDescriptor(c, v)) == null ? void 0 : _Object$getOwnPropert.value;\n      if (isSerializableType(value) || value instanceof Color$1) value = value.clone();\n      return { ...a,\n        [v.slice(1)]: value\n      };\n    }, {});\n\n    for (const key in uniforms) {\n      const propName = key.split('_')[1];\n      if ((props == null ? void 0 : props[propName]) !== undefined) uniforms[key] = props[propName];\n    }\n\n    if (props) {\n      Object.keys(props).map(key => {\n        if (props[key] !== undefined) {\n          // @ts-ignore\n          this[key] = props[key];\n        }\n      });\n    }\n\n    this.uniforms = {};\n    this.schema = [];\n    const properties = {};\n    Object.keys(uniforms).map(key => {\n      const propName = key.split('_')[1];\n      this.uniforms[`u_${this.uuid}_${propName}`] = {\n        value: getUniform(uniforms[key])\n      };\n      this.schema.push({\n        value: uniforms[key],\n        label: propName\n      });\n      properties[propName] = {\n        set: v => {\n          this.uniforms[`u_${this.uuid}_${propName}`].value = getUniform(v);\n        },\n        get: () => {\n          return this.uniforms[`u_${this.uuid}_${propName}`].value;\n        }\n      };\n    });\n    if (props != null && props.name) this.name = props.name;\n    if (props != null && props.mode) this.mode = props.mode;\n    if (props != null && props.visible) this.visible = props.visible;\n    Object.defineProperties(this, properties);\n    this.vertexShader = '';\n    this.fragmentShader = '';\n    this.vertexVariables = '';\n    this.fragmentVariables = '';\n    this.onParse = onParse;\n    this.buildShaders(c); // Remove Name field from Debugger until a way to\n    // rename Leva folders is found\n    // this.schema.push({\n    //   value: this.name,\n    //   label: 'name',\n    // })\n\n    this.schema.push({\n      value: this.mode,\n      label: 'mode',\n      options: Object.values(BlendModes)\n    });\n    this.schema.push({\n      value: this.visible,\n      label: 'visible'\n    });\n  }\n\n  buildShaders(constructor) {\n    var _this$onParse;\n\n    const shaders = Object.getOwnPropertyNames(constructor).filter(e => e === 'fragmentShader' || e === 'vertexShader').reduce((a, v) => {\n      var _Object$getOwnPropert2;\n\n      return { ...a,\n        [v]: (_Object$getOwnPropert2 = Object.getOwnPropertyDescriptor(constructor, v)) == null ? void 0 : _Object$getOwnPropert2.value\n      };\n    }, {});\n    const tokens = {\n      vert: tokenize(shaders.vertexShader || ''),\n      frag: tokenize(shaders.fragmentShader || '')\n    };\n    const descoped = {\n      vert: descope(tokens.vert, this.renameTokens.bind(this)),\n      frag: descope(tokens.frag, this.renameTokens.bind(this))\n    };\n    const funcs = {\n      vert: tokenFunctions(descoped.vert),\n      frag: tokenFunctions(descoped.frag)\n    };\n    const mainIndex = {\n      vert: funcs.vert.map(e => {\n        return e.name;\n      }).indexOf('main'),\n      frag: funcs.frag.map(e => {\n        return e.name;\n      }).indexOf('main')\n    };\n    const variables = {\n      vert: mainIndex.vert >= 0 ? stringify(descoped.vert.slice(0, funcs.vert[mainIndex.vert].outer[0])) : '',\n      frag: mainIndex.frag >= 0 ? stringify(descoped.frag.slice(0, funcs.frag[mainIndex.frag].outer[0])) : ''\n    };\n    const funcBodies = {\n      vert: mainIndex.vert >= 0 ? this.getShaderFromIndex(descoped.vert, funcs.vert[mainIndex.vert].body) : '',\n      frag: mainIndex.frag >= 0 ? this.getShaderFromIndex(descoped.frag, funcs.frag[mainIndex.frag].body) : ''\n    };\n    this.vertexShader = this.processFinal(funcBodies.vert, true);\n    this.fragmentShader = this.processFinal(funcBodies.frag);\n    this.vertexVariables = variables.vert;\n    this.fragmentVariables = variables.frag;\n    (_this$onParse = this.onParse) == null ? void 0 : _this$onParse.call(this, this);\n    this.schema = this.schema.filter((value, index) => {\n      const _value = value.label;\n      return index === this.schema.findIndex(obj => {\n        return obj.label === _value;\n      });\n    });\n  }\n\n  renameTokens(name) {\n    if (name.startsWith('u_')) {\n      const slice = name.slice(2);\n      return `u_${this.uuid}_${slice}`;\n    } else if (name.startsWith('v_')) {\n      const slice = name.slice(2);\n      return `v_${this.uuid}_${slice}`;\n    } else if (name.startsWith('f_')) {\n      const slice = name.slice(2);\n      return `f_${this.uuid}_${slice}`;\n    } else {\n      return name;\n    }\n  }\n\n  processFinal(shader, isVertex) {\n    const s = shader.replace(/\\sf_/gm, ` f_${this.uuid}_`).replace(/\\(f_/gm, `(f_${this.uuid}_`);\n    const returnValue = s.match(/^.*return.*$/gm);\n    let sReplaced = s.replace(/^.*return.*$/gm, '');\n\n    if (returnValue != null && returnValue[0]) {\n      const returnVariable = returnValue[0].replace('return', '').trim().replace(';', '');\n      const blendMode = this.getBlendMode(returnVariable, 'lamina_finalColor');\n      sReplaced += isVertex ? `lamina_finalPosition = ${returnVariable};` : `lamina_finalColor = ${blendMode};`;\n    }\n\n    return sReplaced;\n  }\n\n  getShaderFromIndex(tokens, index) {\n    return stringify(tokens.slice(index[0], index[1]));\n  }\n\n  getBlendMode(b, a) {\n    switch (this.mode) {\n      default:\n      case 'normal':\n        return `lamina_blend_alpha(${a}, ${b}, ${b}.a)`;\n\n      case 'add':\n        return `lamina_blend_add(${a}, ${b}, ${b}.a)`;\n\n      case 'subtract':\n        return `lamina_blend_subtract(${a}, ${b}, ${b}.a)`;\n\n      case 'multiply':\n        return `lamina_blend_multiply(${a}, ${b}, ${b}.a)`;\n\n      case 'lighten':\n        return `lamina_blend_lighten(${a}, ${b}, ${b}.a)`;\n\n      case 'darken':\n        return `lamina_blend_darken(${a}, ${b}, ${b}.a)`;\n\n      case 'divide':\n        return `lamina_blend_divide(${a}, ${b}, ${b}.a)`;\n\n      case 'overlay':\n        return `lamina_blend_overlay(${a}, ${b}, ${b}.a)`;\n\n      case 'screen':\n        return `lamina_blend_screen(${a}, ${b}, ${b}.a)`;\n\n      case 'softlight':\n        return `lamina_blend_softlight(${a}, ${b}, ${b}.a)`;\n\n      case 'reflect':\n        return `lamina_blend_reflect(${a}, ${b}, ${b}.a)`;\n\n      case 'negation':\n        return `lamina_blend_negation(${a}, ${b}, ${b}.a)`;\n    }\n  }\n\n  getSchema() {\n    const latestSchema = this.schema.map(({\n      label,\n      options,\n      ...rest\n    }) => {\n      return {\n        label,\n        options,\n        ...getSpecialParameters(label),\n        ...rest,\n        // @ts-ignore\n        value: serializeProp(this[label])\n      };\n    });\n    return latestSchema;\n  }\n\n  serialize() {\n    const name = this.constructor.name.split('$')[0];\n    let nonUniformPropKeys = Object.keys(this);\n    nonUniformPropKeys = nonUniformPropKeys.filter(e => !['uuid', 'uniforms', 'schema', 'fragmentShader', 'vertexShader', 'fragmentVariables', 'vertexVariables', 'attribs', 'events', '__r3f', 'onParse'].includes(e));\n    const nonUniformProps = {};\n    nonUniformPropKeys.forEach(k => {\n      // @ts-ignore\n      nonUniformProps[k] = this[k];\n    });\n    const props = {};\n\n    for (const key in this.uniforms) {\n      const name = key.replace(`u_${this.uuid}_`, '');\n      props[name] = serializeProp(this.uniforms[key].value);\n    }\n\n    return {\n      constructor: name,\n      properties: { ...props,\n        ...nonUniformProps\n      }\n    };\n  }\n\n}\n\nclass Depth extends Abstract {\n  constructor(props) {\n    super(Depth, {\n      name: 'Depth',\n      ...props\n    }, self => {\n      self.schema.push({\n        value: self.mapping,\n        label: 'mapping',\n        options: ['vector', 'world', 'camera']\n      });\n      const mapping = Depth.getMapping(self.uuid, self.mapping);\n      self.fragmentShader = self.fragmentShader.replace('lamina_mapping_template', mapping);\n    });\n    this.mapping = 'vector';\n  }\n\n  static getMapping(uuid, type) {\n    switch (type) {\n      default:\n      case 'vector':\n        return `length(v_${uuid}_worldPosition - u_${uuid}_origin)`;\n\n      case 'world':\n        return `length(v_${uuid}_position - vec3(0.))`;\n\n      case 'camera':\n        return `length(v_${uuid}_worldPosition - cameraPosition)`;\n    }\n  }\n\n}\nDepth.u_near = 2;\nDepth.u_far = 10;\nDepth.u_origin = new Vector3(0, 0, 0);\nDepth.u_colorA = 'white';\nDepth.u_colorB = 'black';\nDepth.u_alpha = 1;\nDepth.vertexShader = `\n  varying vec3 v_worldPosition;\n  varying vec3 v_position;\n\n  void main() {\n    v_worldPosition = (vec4(position, 1.0) * modelMatrix).xyz;\n    v_position = position;\n  }\n  `;\nDepth.fragmentShader = `   \n    uniform float u_alpha;\n    uniform float u_near;\n    uniform float u_far;\n    uniform float u_isVector;\n    uniform vec3 u_origin;\n    uniform vec3 u_colorA;\n    uniform vec3 u_colorB;\n\n    varying vec3 v_worldPosition;\n    varying vec3 v_position;\n\n    void main() {\n      float f_dist = lamina_mapping_template;\n      float f_depth = (f_dist - u_near) / (u_far - u_near);\n\t\t\tvec3 f_depthColor =  mix(u_colorB, u_colorA, 1.0 - clamp(f_depth, 0., 1.));\n  \n  \n      return vec4(f_depthColor, u_alpha);\n    }\n  `;\n\nclass Color extends Abstract {\n  constructor(props) {\n    super(Color, {\n      name: 'Color',\n      ...props\n    });\n  }\n\n}\nColor.u_color = 'red';\nColor.u_alpha = 1;\nColor.fragmentShader = `   \n    uniform vec3 u_color;\n    uniform float u_alpha;\n\n    void main() {\n      return vec4(u_color, u_alpha);\n    }\n  `;\n\nclass Noise extends Abstract {\n  constructor(props) {\n    super(Noise, {\n      name: 'noise',\n      ...props\n    }, self => {\n      self.schema.push({\n        value: self.type,\n        label: 'type',\n        options: Object.values(NoiseTypes)\n      });\n      self.schema.push({\n        value: self.mapping,\n        label: 'mapping',\n        options: Object.values(MappingTypes)\n      });\n      const noiseFunc = Noise.getNoiseFunction(self.type);\n      const mapping = Noise.getMapping(self.mapping);\n      self.vertexShader = self.vertexShader.replace('lamina_mapping_template', mapping);\n      self.fragmentShader = self.fragmentShader.replace('lamina_noise_template', noiseFunc);\n    });\n    this.type = 'perlin';\n    this.mapping = 'local';\n  }\n\n  static getNoiseFunction(type) {\n    switch (type) {\n      default:\n      case 'perlin':\n        return `lamina_noise_perlin`;\n\n      case 'simplex':\n        return `lamina_noise_simplex`;\n\n      case 'cell':\n        return `lamina_noise_worley`;\n\n      case 'white':\n        return `lamina_noise_white`;\n\n      case 'curl':\n        return `lamina_noise_swirl`;\n    }\n  }\n\n  static getMapping(type) {\n    switch (type) {\n      default:\n      case 'local':\n        return `position`;\n\n      case 'world':\n        return `(modelMatrix * vec4(position,1.0)).xyz`;\n\n      case 'uv':\n        return `vec3(uv, 0.)`;\n    }\n  }\n\n}\nNoise.u_colorA = '#666666';\nNoise.u_colorB = '#666666';\nNoise.u_colorC = '#FFFFFF';\nNoise.u_colorD = '#FFFFFF';\nNoise.u_alpha = 1;\nNoise.u_scale = 1;\nNoise.u_offset = new Vector3(0, 0, 0);\nNoise.vertexShader = `\n    varying vec3 v_position;\n\n    void main() {\n        v_position = lamina_mapping_template;\n    }\n  `;\nNoise.fragmentShader = `   \n    uniform vec3 u_colorA;\n    uniform vec3 u_colorB;\n    uniform vec3 u_colorC;\n    uniform vec3 u_colorD;\n    uniform vec3 u_offset;\n\n    uniform float u_alpha;\n    uniform float u_scale;\n\n    varying vec3 v_position;\n\n\n    void main() {\n        float f_n = lamina_noise_template((v_position + u_offset) * u_scale);\n\n        float f_step1 = 0.;\n        float f_step2 = 0.2;\n        float f_step3 = 0.6;\n        float f_step4 = 1.;\n\n        vec3 f_color = mix(u_colorA, u_colorB, smoothstep(f_step1, f_step2, f_n));\n        f_color = mix(f_color, u_colorC, smoothstep(f_step2, f_step3, f_n));\n        f_color = mix(f_color, u_colorD, smoothstep(f_step3, f_step4, f_n));\n\n        return vec4(f_color, u_alpha);\n    }\n  `;\n\nclass Fresnel extends Abstract {\n  constructor(props) {\n    super(Fresnel, {\n      name: 'Fresnel',\n      ...props\n    });\n  }\n\n}\nFresnel.u_color = 'white';\nFresnel.u_alpha = 1;\nFresnel.u_bias = 0;\nFresnel.u_intensity = 1;\nFresnel.u_power = 2;\nFresnel.u_factor = 1;\nFresnel.vertexShader = `\n    varying vec3 v_worldPosition;\n    varying vec3 v_worldNormal;\n\n    void main() {\n        v_worldPosition = vec3(-viewMatrix[0][2], -viewMatrix[1][2], -viewMatrix[2][2]);\n        v_worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\n        \n    }\n  `;\nFresnel.fragmentShader = `   \n    uniform vec3 u_color;\n    uniform float u_alpha;\n    uniform float u_bias;\n    uniform float u_intensity;\n    uniform float u_power;\n    uniform float u_factor;\n\n    varying vec3 v_worldPosition;\n    varying vec3 v_worldNormal;\n\n    void main() {\n        float f_a = (u_factor  + dot(v_worldPosition, v_worldNormal));\n        float f_fresnel = u_bias + u_intensity * pow(abs(f_a), u_power);\n\n        f_fresnel = clamp(f_fresnel, 0.0, 1.0);\n        return vec4(f_fresnel * u_color, u_alpha);\n    }\n  `;\n\nclass Gradient extends Abstract {\n  constructor(props) {\n    super(Gradient, {\n      name: 'Gradient',\n      ...props\n    }, self => {\n      self.schema.push({\n        value: self.axes,\n        label: 'axes',\n        options: ['x', 'y', 'z']\n      });\n      self.schema.push({\n        value: self.mapping,\n        label: 'mapping',\n        options: Object.values(MappingTypes)\n      });\n      const mapping = Gradient.getMapping(self.mapping);\n      self.vertexShader = self.vertexShader.replace('lamina_mapping_template', mapping || 'local');\n      self.fragmentShader = self.fragmentShader.replace('axes_template', self.axes || 'x');\n    });\n    this.axes = 'x';\n    this.mapping = 'local';\n  }\n\n  static getMapping(type) {\n    switch (type) {\n      default:\n      case 'local':\n        return `position`;\n\n      case 'world':\n        return `(modelMatrix * vec4(position,1.0)).xyz`;\n\n      case 'uv':\n        return `vec3(uv, 0.)`;\n    }\n  }\n\n}\nGradient.u_colorA = 'white';\nGradient.u_colorB = 'black';\nGradient.u_alpha = 1;\nGradient.u_start = 1;\nGradient.u_end = -1;\nGradient.u_contrast = 1;\nGradient.vertexShader = `\n\t\tvarying vec3 v_position;\n\n\t\tvod main() {\n      v_position = lamina_mapping_template;\n\t\t}\n  `;\nGradient.fragmentShader = `   \n    uniform vec3 u_colorA;\n    uniform vec3 u_colorB;\n    uniform vec3 u_axis;\n    uniform float u_alpha;\n    uniform float u_start;\n    uniform float u_end;\n    uniform float u_contrast;\n\n\t\tvarying vec3 v_position;\n\n    void main() {\n\n      float f_step = smoothstep(u_start, u_end, v_position.axes_template * u_contrast);\n      vec3 f_color = mix(u_colorA, u_colorB, f_step);\n\n      return vec4(f_color, u_alpha);\n    }\n  `;\n\nclass Matcap extends Abstract {\n  constructor(props) {\n    super(Matcap, {\n      name: \"Matcap\",\n      ...props\n    });\n  }\n\n}\nMatcap.u_alpha = 1;\nMatcap.u_map = undefined;\nMatcap.vertexShader = `\n    varying vec3 v_position;\n    varying vec3 v_normal;\n    \n    void main() {\n      v_position = normalize( vec3( modelViewMatrix * vec4( position, 1.0 ) ) );\n      v_normal = normalize( normalMatrix * normal );\n    }\n    `;\nMatcap.fragmentShader = ` \n\t\tuniform sampler2D u_map;  \n\t\tuniform float u_alpha;  \n\t\tvarying vec3 v_position;\n\t\tvarying vec3 v_normal;\n\n\t\t\n    void main() {\n\t\t\tvec3 f_r = reflect( v_position, v_normal );\n\t\t\tfloat f_m = 2. * sqrt( pow( f_r.x, 2. ) + pow( f_r.y, 2. ) + pow( f_r.z + 1., 2. ) );\n\t\t\tvec2 f_vN = f_r.xy / f_m + .5;\n\n\t\t\tvec3 f_base = texture2D(u_map, f_vN).rgb;\n\n      return vec4(f_base, u_alpha);\n    }\n  `;\n\nclass Texture extends Abstract {\n  constructor(props) {\n    super(Texture, {\n      name: 'Texture',\n      ...props\n    });\n  }\n\n}\nTexture.u_alpha = 1;\nTexture.u_map = undefined;\nTexture.vertexShader = `\n    varying vec2 v_uv;\n    \n    void main() {\n        v_uv = uv;\n    }\n    `;\nTexture.fragmentShader = ` \n\t\tuniform sampler2D u_map;  \n\t\tuniform float u_alpha;  \n\t\tvarying vec2 v_uv;\n\n    void main() {\n\t\t\tvec3 f_color = texture2D(u_map, v_uv).rgb;\n      return vec4(f_color, u_alpha);\n    }\n  `;\n\nclass Displace extends Abstract {\n  constructor(props) {\n    super(Displace, {\n      name: 'Displace',\n      ...props\n    }, self => {\n      self.schema.push({\n        value: self.type,\n        label: 'type',\n        options: Object.values(NoiseTypes)\n      });\n      self.schema.push({\n        value: self.mapping,\n        label: 'mapping',\n        options: Object.values(MappingTypes)\n      });\n      const noiseFunc = Displace.getNoiseFunction(self.type);\n      const mapping = Displace.getMapping(self.mapping);\n      self.vertexVariables = self.vertexVariables.replace('lamina_mapping_template', mapping);\n      self.vertexVariables = self.vertexVariables.replace('lamina_noise_template', noiseFunc);\n    });\n    this.type = 'perlin';\n    this.mapping = 'local';\n  }\n\n  static getNoiseFunction(type) {\n    switch (type) {\n      default:\n      case 'perlin':\n        return `lamina_noise_perlin`;\n\n      case 'simplex':\n        return `lamina_noise_simplex`;\n\n      case 'cell':\n        return `lamina_noise_worley`;\n\n      case 'white':\n        return `lamina_noise_white`;\n\n      case 'curl':\n        return `lamina_noise_swirl`;\n    }\n  }\n\n  static getMapping(type) {\n    switch (type) {\n      default:\n      case 'local':\n        return `p`;\n\n      case 'world':\n        return `(modelMatrix * vec4(p,1.0)).xyz`;\n\n      case 'uv':\n        return `vec3(uv, 0.)`;\n    }\n  }\n\n}\nDisplace.u_strength = 1;\nDisplace.u_scale = 1;\nDisplace.u_offset = new Vector3(0, 0, 0);\nDisplace.vertexShader = `\n       \n      uniform float u_strength;\n      uniform float u_scale;\n      uniform vec3 u_offset;\n\n      vec3 displace(vec3 p) {\n\t\t\t\tvec3 f_position = lamina_mapping_template;\n        float f_n = lamina_noise_template((f_position + u_offset) * u_scale) * u_strength;\n        vec3 f_newPosition = p + (f_n * normal);\n\n\t\t\t\treturn f_newPosition;\n      }\n\n      \n\t\t\tvec3 orthogonal(vec3 v) {\n  \t\t  return normalize(abs(v.x) > abs(v.z) ? vec3(-v.y, v.x, 0.0)\n  \t\t  : vec3(0.0, -v.z, v.y));\n  \t\t}\n  \t\tvec3 recalcNormals(vec3 newPos) {\n  \t\t  float offset = 0.001;\n  \t\t  vec3 tangent = orthogonal(normal);\n  \t\t  vec3 bitangent = normalize(cross(normal, tangent));\n  \t\t  vec3 neighbour1 = position + tangent * offset;\n  \t\t  vec3 neighbour2 = position + bitangent * offset;\n  \t\t  vec3 displacedNeighbour1 = displace(neighbour1);\n  \t\t  vec3 displacedNeighbour2 = displace(neighbour2);\n  \t\t  vec3 displacedTangent = displacedNeighbour1 - newPos;\n  \t\t  vec3 displacedBitangent = displacedNeighbour2 - newPos;\n  \t\t  return normalize(cross(displacedTangent, displacedBitangent));\n  \t\t}\n  \n  \n      void main() {\n       \n\t\t\t\tvec3 f_newPosition = displace(position);\n        lamina_finalNormal = recalcNormals(f_newPosition);\n\n        return f_newPosition;\n      }\n    `;\n\nclass Normal extends Abstract {\n  constructor(props) {\n    super(Normal, {\n      name: 'Normal',\n      ...props\n    });\n  }\n\n}\nNormal.u_alpha = 1;\nNormal.u_direction = new Vector3(1, 1, 1);\nNormal.vertexShader = `   \n  varying vec3 v_normals; \n\n  void main() {\n    v_normals = normal;\n  }\n`;\nNormal.fragmentShader = `   \n  \tuniform float u_alpha;\n  \tuniform vec3 u_color;\n  \tuniform vec3 u_direction;\n\n\t\tvarying vec3 v_normals;\n\n    void main() {\n\t\t\tvec3 f_normalColor = vec3(1.);\n      f_normalColor.x = v_normals.x * u_direction.x;\n      f_normalColor.y = v_normals.y * u_direction.y;\n      f_normalColor.z = v_normals.z * u_direction.z;\n\n      return vec4(f_normalColor, u_alpha);\n    }\n  `;\n\nvar BlendModesChunk = /* glsl */\n`\nvec4 lamina_blend_add(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn min(x + y, 1.0) * opacity + x * (1.0 - opacity);\n\n}\nvec3 lamina_blend_alpha(const in vec3 x, const in vec3 y, const in float opacity) {\n\n\treturn y * opacity + x * (1.0 - opacity);\n\n}\n\nvec4 lamina_blend_alpha(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tfloat a = min(y.a, opacity);\n\n\treturn vec4(lamina_blend_alpha(x.rgb, y.rgb, a), max(x.a, a));\n\n}\nvec4 lamina_blend_average(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn (x + y) * 0.5 * opacity + x * (1.0 - opacity);\n\n}\nfloat lamina_blend_color_burn(const in float x, const in float y) {\n\n\treturn (y == 0.0) ? y : max(1.0 - (1.0 - x) / y, 0.0);\n\n}\n\nvec4 lamina_blend_color_burn(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_color_burn(x.r, y.r),\n\t\tlamina_blend_color_burn(x.g, y.g),\n\t\tlamina_blend_color_burn(x.b, y.b),\n\t\tlamina_blend_color_burn(x.a, y.a)\n\t);\n\n\treturn z * opacity + x * (1.0 - opacity);\n\n}\nfloat lamina_blend_color_dodge(const in float x, const in float y) {\n\n\treturn (y == 1.0) ? y : min(x / (1.0 - y), 1.0);\n\n}\n\nvec4 lamina_blend_color_dodge(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_color_dodge(x.r, y.r),\n\t\tlamina_blend_color_dodge(x.g, y.g),\n\t\tlamina_blend_color_dodge(x.b, y.b),\n\t\tlamina_blend_color_dodge(x.a, y.a)\n\t);\n\n\treturn z * opacity + x * (1.0 - opacity);\n\n}\nvec4 lamina_blend_darken(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn min(x, y) * opacity + x * (1.0 - opacity);\n\n}\nvec4 lamina_blend_difference(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn abs(x - y) * opacity + x * (1.0 - opacity);\n\n}\nfloat lamina_blend_divide(const in float x, const in float y) {\n\n\treturn (y > 0.0) ? min(x / y, 1.0) : 1.0;\n\n}\n\nvec4 lamina_blend_divide(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_divide(x.r, y.r),\n\t\tlamina_blend_divide(x.g, y.g),\n\t\tlamina_blend_divide(x.b, y.b),\n\t\tlamina_blend_divide(x.a, y.a)\n\t);\n\n\treturn z * opacity + x * (1.0 - opacity);\n\n}\nvec4 lamina_blend_exclusion(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn (x + y - 2.0 * x * y) * opacity + x * (1.0 - opacity);\n\n}\nvec4 lamina_blend_lighten(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn max(x, y) * opacity + x * (1.0 - opacity);\n\n}\nvec4 lamina_blend_multiply(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn x * y * opacity + x * (1.0 - opacity);\n\n}\nvec4 lamina_blend_negation(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn (1.0 - abs(1.0 - x - y)) * opacity + x * (1.0 - opacity);\n\n}\nvec4 lamina_blend_normal(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn y * opacity + x * (1.0 - opacity);\n\n}\nfloat lamina_blend_overlay(const in float x, const in float y) {\n\n\treturn (x < 0.5) ? (2.0 * x * y) : (1.0 - 2.0 * (1.0 - x) * (1.0 - y));\n\n}\n\nvec4 lamina_blend_overlay(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_overlay(x.r, y.r),\n\t\tlamina_blend_overlay(x.g, y.g),\n\t\tlamina_blend_overlay(x.b, y.b),\n\t\tlamina_blend_overlay(x.a, y.a)\n\t);\n\n\treturn z * opacity + x * (1.0 - opacity);\n\n}\nfloat lamina_blend_reflect(const in float x, const in float y) {\n\n\treturn (y == 1.0) ? y : min(x * x / (1.0 - y), 1.0);\n\n}\n\nvec4 lamina_blend_reflect(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_reflect(x.r, y.r),\n\t\tlamina_blend_reflect(x.g, y.g),\n\t\tlamina_blend_reflect(x.b, y.b),\n\t\tlamina_blend_reflect(x.a, y.a)\n\t);\n\n\treturn z * opacity + x * (1.0 - opacity);\n\n}\nvec4 lamina_blend_screen(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn (1.0 - (1.0 - x) * (1.0 - y)) * opacity + x * (1.0 - opacity);\n\n}\nfloat lamina_blend_softlight(const in float x, const in float y) {\n\n\treturn (y < 0.5) ?\n\t\t(2.0 * x * y + x * x * (1.0 - 2.0 * y)) :\n\t\t(sqrt(x) * (2.0 * y - 1.0) + 2.0 * x * (1.0 - y));\n\n}\n\nvec4 lamina_blend_softlight(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\tvec4 z = vec4(\n\t\tlamina_blend_softlight(x.r, y.r),\n\t\tlamina_blend_softlight(x.g, y.g),\n\t\tlamina_blend_softlight(x.b, y.b),\n\t\tlamina_blend_softlight(x.a, y.a)\n\t);\n\n\treturn z * opacity + x * (1.0 - opacity);\n\n}\nvec4 lamina_blend_subtract(const in vec4 x, const in vec4 y, const in float opacity) {\n\n\treturn max(x + y - 1.0, 0.0) * opacity + x * (1.0 - opacity);\n\n}\n\n`;\n\nvar NoiseChunk = /* glsl */\n`\n\n// From: https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\n// Huge thanks to the creators of these algorithms\n\nfloat lamina_noise_mod289(float x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 lamina_noise_mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 lamina_noise_perm(vec4 x){return lamina_noise_mod289(((x * 34.0) + 1.0) * x);}\nvec4 lamina_noise_permute(vec4 x) { return mod(((x * 34.0) + 1.0) * x, 289.0); }\nvec4 lamina_noise_taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\n\n\nfloat lamina_noise_white(vec2 p) {\n  return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) *\n               (0.1 + abs(sin(p.y * 13.0 + p.x))));\n}\n\nfloat lamina_noise_white(vec3 p) {\n  return lamina_noise_white(p.xy);\n}\n\n\nvec3 lamina_noise_fade(vec3 t) { return t * t * t * (t * (t * 6.0 - 15.0) + 10.0); }\n\nfloat lamina_noise_perlin(vec3 P) {\n  vec3 Pi0 = floor(P);        // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P);        // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = lamina_noise_permute(lamina_noise_permute(ix) + iy);\n  vec4 ixy0 = lamina_noise_permute(ixy + iz0);\n  vec4 ixy1 = lamina_noise_permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\n  vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\n  vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\n  vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\n  vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\n  vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\n  vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\n  vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\n\n  vec4 norm0 = lamina_noise_taylorInvSqrt(\n      vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = lamina_noise_taylorInvSqrt(\n      vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = lamina_noise_fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111),\n                 fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return lamina_normalize(2.2 * n_xyz);\n}\n\nfloat lamina_noise_simplex(vec3 v) {\n  const vec2 C = vec2(1.0 / 6.0, 1.0 / 3.0);\n  const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i = floor(v + dot(v, C.yyy));\n  vec3 x0 = v - i + dot(i, C.xxx);\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min(g.xyz, l.zxy);\n  vec3 i2 = max(g.xyz, l.zxy);\n\n  //  x0 = x0 - 0. + 0.0 * C\n  vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n  vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n  vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n  // Permutations\n  i = mod(i, 289.0);\n  vec4 p = lamina_noise_permute(lamina_noise_permute(lamina_noise_permute(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y +\n                             vec4(0.0, i1.y, i2.y, 1.0)) +\n                    i.x + vec4(0.0, i1.x, i2.x, 1.0));\n\n  // Gradients\n  // ( N*N points uniformly over a square, mapped onto an octahedron.)\n  float n_ = 1.0 / 7.0; // N=7\n  vec3 ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z); //  mod(p,N*N)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_); // mod(j,N)\n\n  vec4 x = x_ * ns.x + ns.yyyy;\n  vec4 y = y_ * ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4(x.xy, y.xy);\n  vec4 b1 = vec4(x.zw, y.zw);\n\n  vec4 s0 = floor(b0) * 2.0 + 1.0;\n  vec4 s1 = floor(b1) * 2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n  vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n  vec3 p0 = vec3(a0.xy, h.x);\n  vec3 p1 = vec3(a0.zw, h.y);\n  vec3 p2 = vec3(a1.xy, h.z);\n  vec3 p3 = vec3(a1.zw, h.w);\n\n  // Normalise gradients\n  vec4 norm =\n      lamina_noise_taylorInvSqrt(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m =\n      max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\n  m = m * m;\n  return lamina_normalize(42.0 *\n         dot(m * m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3))));\n}\n\nvec3 lamina_noise_simplex3(vec3 x) {\n  float s = lamina_noise_simplex(vec3(x));\n  float s1 = lamina_noise_simplex(vec3(x.y - 19.1, x.z + 33.4, x.x + 47.2));\n  float s2 = lamina_noise_simplex(vec3(x.z + 74.2, x.x - 124.5, x.y + 99.4));\n  vec3 c = vec3(s, s1, s2);\n  return c;\n}\n\nvec3 lamina_noise_curl(vec3 p) {\n  const float e = .1;\n  vec3 dx = vec3(e, 0.0, 0.0);\n  vec3 dy = vec3(0.0, e, 0.0);\n  vec3 dz = vec3(0.0, 0.0, e);\n\n  vec3 p_x0 = lamina_noise_simplex3(p - dx);\n  vec3 p_x1 = lamina_noise_simplex3(p + dx);\n  vec3 p_y0 = lamina_noise_simplex3(p - dy);\n  vec3 p_y1 = lamina_noise_simplex3(p + dy);\n  vec3 p_z0 = lamina_noise_simplex3(p - dz);\n  vec3 p_z1 = lamina_noise_simplex3(p + dz);\n\n  float x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\n  float y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\n  float z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\n\n  const float divisor = 1.0 / (2.0 * e);\n  return normalize(vec3(x, y, z) * divisor);\n}\n\nvec3 lamina_permute(vec3 x) {\n  return mod((34.0 * x + 1.0) * x, 289.0);\n}\n\nvec3 lamina_dist(vec3 x, vec3 y, vec3 z,  bool manhattanDistance) {\n  return manhattanDistance ?  abs(x) + abs(y) + abs(z) :  (x * x + y * y + z * z);\n}\n\n// From: https://github.com/Erkaman/glsl-worley\nfloat lamina_noise_worley(vec3 P) {\n  float jitter = 1.;\n  bool manhattanDistance = false; \n\n  float K = 0.142857142857; // 1/7\n  float Ko = 0.428571428571; // 1/2-K/2\n  float  K2 = 0.020408163265306; // 1/(7*7)\n  float Kz = 0.166666666667; // 1/6\n  float Kzo = 0.416666666667; // 1/2-1/6*2\n\n\tvec3 Pi = mod(floor(P), 289.0);\n \tvec3 Pf = fract(P) - 0.5;\n\n\tvec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\n\n\tvec3 p = lamina_permute(Pi.x + vec3(-1.0, 0.0, 1.0));\n\tvec3 p1 = lamina_permute(p + Pi.y - 1.0);\n\tvec3 p2 = lamina_permute(p + Pi.y);\n\tvec3 p3 = lamina_permute(p + Pi.y + 1.0);\n\n\tvec3 p11 = lamina_permute(p1 + Pi.z - 1.0);\n\tvec3 p12 = lamina_permute(p1 + Pi.z);\n\tvec3 p13 = lamina_permute(p1 + Pi.z + 1.0);\n\n\tvec3 p21 = lamina_permute(p2 + Pi.z - 1.0);\n\tvec3 p22 = lamina_permute(p2 + Pi.z);\n\tvec3 p23 = lamina_permute(p2 + Pi.z + 1.0);\n\n\tvec3 p31 = lamina_permute(p3 + Pi.z - 1.0);\n\tvec3 p32 = lamina_permute(p3 + Pi.z);\n\tvec3 p33 = lamina_permute(p3 + Pi.z + 1.0);\n\n\tvec3 ox11 = fract(p11*K) - Ko;\n\tvec3 oy11 = mod(floor(p11*K), 7.0)*K - Ko;\n\tvec3 oz11 = floor(p11*K2)*Kz - Kzo; // p11 < 289 guaranteed\n\n\tvec3 ox12 = fract(p12*K) - Ko;\n\tvec3 oy12 = mod(floor(p12*K), 7.0)*K - Ko;\n\tvec3 oz12 = floor(p12*K2)*Kz - Kzo;\n\n\tvec3 ox13 = fract(p13*K) - Ko;\n\tvec3 oy13 = mod(floor(p13*K), 7.0)*K - Ko;\n\tvec3 oz13 = floor(p13*K2)*Kz - Kzo;\n\n\tvec3 ox21 = fract(p21*K) - Ko;\n\tvec3 oy21 = mod(floor(p21*K), 7.0)*K - Ko;\n\tvec3 oz21 = floor(p21*K2)*Kz - Kzo;\n\n\tvec3 ox22 = fract(p22*K) - Ko;\n\tvec3 oy22 = mod(floor(p22*K), 7.0)*K - Ko;\n\tvec3 oz22 = floor(p22*K2)*Kz - Kzo;\n\n\tvec3 ox23 = fract(p23*K) - Ko;\n\tvec3 oy23 = mod(floor(p23*K), 7.0)*K - Ko;\n\tvec3 oz23 = floor(p23*K2)*Kz - Kzo;\n\n\tvec3 ox31 = fract(p31*K) - Ko;\n\tvec3 oy31 = mod(floor(p31*K), 7.0)*K - Ko;\n\tvec3 oz31 = floor(p31*K2)*Kz - Kzo;\n\n\tvec3 ox32 = fract(p32*K) - Ko;\n\tvec3 oy32 = mod(floor(p32*K), 7.0)*K - Ko;\n\tvec3 oz32 = floor(p32*K2)*Kz - Kzo;\n\n\tvec3 ox33 = fract(p33*K) - Ko;\n\tvec3 oy33 = mod(floor(p33*K), 7.0)*K - Ko;\n\tvec3 oz33 = floor(p33*K2)*Kz - Kzo;\n\n\tvec3 dx11 = Pfx + jitter*ox11;\n\tvec3 dy11 = Pfy.x + jitter*oy11;\n\tvec3 dz11 = Pfz.x + jitter*oz11;\n\n\tvec3 dx12 = Pfx + jitter*ox12;\n\tvec3 dy12 = Pfy.x + jitter*oy12;\n\tvec3 dz12 = Pfz.y + jitter*oz12;\n\n\tvec3 dx13 = Pfx + jitter*ox13;\n\tvec3 dy13 = Pfy.x + jitter*oy13;\n\tvec3 dz13 = Pfz.z + jitter*oz13;\n\n\tvec3 dx21 = Pfx + jitter*ox21;\n\tvec3 dy21 = Pfy.y + jitter*oy21;\n\tvec3 dz21 = Pfz.x + jitter*oz21;\n\n\tvec3 dx22 = Pfx + jitter*ox22;\n\tvec3 dy22 = Pfy.y + jitter*oy22;\n\tvec3 dz22 = Pfz.y + jitter*oz22;\n\n\tvec3 dx23 = Pfx + jitter*ox23;\n\tvec3 dy23 = Pfy.y + jitter*oy23;\n\tvec3 dz23 = Pfz.z + jitter*oz23;\n\n\tvec3 dx31 = Pfx + jitter*ox31;\n\tvec3 dy31 = Pfy.z + jitter*oy31;\n\tvec3 dz31 = Pfz.x + jitter*oz31;\n\n\tvec3 dx32 = Pfx + jitter*ox32;\n\tvec3 dy32 = Pfy.z + jitter*oy32;\n\tvec3 dz32 = Pfz.y + jitter*oz32;\n\n\tvec3 dx33 = Pfx + jitter*ox33;\n\tvec3 dy33 = Pfy.z + jitter*oy33;\n\tvec3 dz33 = Pfz.z + jitter*oz33;\n\n\tvec3 d11 = lamina_dist(dx11, dy11, dz11, manhattanDistance);\n\tvec3 d12 = lamina_dist(dx12, dy12, dz12, manhattanDistance);\n\tvec3 d13 = lamina_dist(dx13, dy13, dz13, manhattanDistance);\n\tvec3 d21 = lamina_dist(dx21, dy21, dz21, manhattanDistance);\n\tvec3 d22 = lamina_dist(dx22, dy22, dz22, manhattanDistance);\n\tvec3 d23 = lamina_dist(dx23, dy23, dz23, manhattanDistance);\n\tvec3 d31 = lamina_dist(dx31, dy31, dz31, manhattanDistance);\n\tvec3 d32 = lamina_dist(dx32, dy32, dz32, manhattanDistance);\n\tvec3 d33 = lamina_dist(dx33, dy33, dz33, manhattanDistance);\n\n\tvec3 d1a = min(d11, d12);\n\td12 = max(d11, d12);\n\td11 = min(d1a, d13); // Smallest now not in d12 or d13\n\td13 = max(d1a, d13);\n\td12 = min(d12, d13); // 2nd smallest now not in d13\n\tvec3 d2a = min(d21, d22);\n\td22 = max(d21, d22);\n\td21 = min(d2a, d23); // Smallest now not in d22 or d23\n\td23 = max(d2a, d23);\n\td22 = min(d22, d23); // 2nd smallest now not in d23\n\tvec3 d3a = min(d31, d32);\n\td32 = max(d31, d32);\n\td31 = min(d3a, d33); // Smallest now not in d32 or d33\n\td33 = max(d3a, d33);\n\td32 = min(d32, d33); // 2nd smallest now not in d33\n\tvec3 da = min(d11, d21);\n\td21 = max(d11, d21);\n\td11 = min(da, d31); // Smallest now in d11\n\td31 = max(da, d31); // 2nd smallest now not in d31\n\td11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;\n\td11.xz = (d11.x < d11.z) ? d11.xz : d11.zx; // d11.x now smallest\n\td12 = min(d12, d21); // 2nd smallest now not in d21\n\td12 = min(d12, d22); // nor in d22\n\td12 = min(d12, d31); // nor in d31\n\td12 = min(d12, d32); // nor in d32\n\td11.yz = min(d11.yz,d12.xy); // nor in d12.yz\n\td11.y = min(d11.y,d12.z); // Only two more to go\n\td11.y = min(d11.y,d11.z); // Done! (Phew!)\n\n  vec2 F = sqrt(d11.xy);\n\treturn F.x; // F1, F2\n\n}\n\nfloat lamina_noise_swirl(vec3 position) {\n    float scale = 0.1;\n    float freq = 4. * scale;\n    float t = 1.;\n\n    vec3 pos = (position * scale) + lamina_noise_curl(position * 7. * scale);\n\n    float worley1 = 1. - lamina_noise_worley((pos * (freq * 2.)) +  (t * 2.));\n    float worley2 = 1. - lamina_noise_worley((pos * (freq * 4.)) +  (t * 4.));\n    float worley3 = 1. - lamina_noise_worley((pos * (freq * 8.)) +  (t * 8.));\n    float worley4 = 1. - lamina_noise_worley((pos * (freq * 16.)) +  (t * 16.));\n    \n    float fbm1 = worley1 * .625 + worley2 * .25 + worley3 * .125;\n    float fbm2 = worley2 * .625 + worley3 * .25 + worley4 * .125;\n    float fbm3 = worley3 * .75 + worley4 * .25;\n\n    vec3 curlWorleyFbm = vec3(fbm1, fbm2, fbm3);\n    float curlWorley = curlWorleyFbm.r * .625 + curlWorleyFbm.g * .25 + \n        curlWorleyFbm.b * .125;\n\n    return curlWorley;\n}\n  \n  \n`;\n\nvar HelpersChunk = /* glsl */\n`\n\nfloat lamina_map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat lamina_normalize(float v) { return lamina_map(v, -1.0, 1.0, 0.0, 1.0); }\n`;\n\nclass LayerMaterial extends CustomShaderMaterial {\n  constructor({\n    color,\n    alpha,\n    lighting,\n    layers,\n    name,\n    ...props\n  } = {}) {\n    super(ShadingTypes[lighting || 'basic'], undefined, undefined, undefined, props);\n    this.name = 'LayerMaterial';\n    this.layers = [];\n    this.baseColor = 'white';\n    this.alpha = 1;\n    this.lighting = 'basic';\n    this.baseColor = color || this.baseColor;\n    this.alpha = alpha != null ? alpha : this.alpha;\n    this.layers = layers || this.layers;\n    this.lighting = lighting || this.lighting;\n    this.name = name || this.name;\n    this.refresh();\n  }\n\n  genShaders() {\n    let vertexVariables = '';\n    let fragmentVariables = '';\n    let vertexShader = '';\n    let fragmentShader = '';\n    let uniforms = {};\n    this.layers.filter(l => l.visible).forEach(l => {\n      // l.buildShaders(l.constructor)\n      vertexVariables += l.vertexVariables + '\\n';\n      fragmentVariables += l.fragmentVariables + '\\n';\n      vertexShader += l.vertexShader + '\\n';\n      fragmentShader += l.fragmentShader + '\\n';\n      uniforms = { ...uniforms,\n        ...l.uniforms\n      };\n    });\n    uniforms = { ...uniforms,\n      ...{\n        u_lamina_color: {\n          value: typeof this.baseColor === 'string' ? new THREE.Color(this.baseColor).convertSRGBToLinear() : this.baseColor\n        },\n        u_lamina_alpha: {\n          value: this.alpha\n        }\n      }\n    };\n    this.transparent = Boolean(this.alpha !== undefined && this.alpha < 1);\n    return {\n      uniforms,\n      vertexShader: `\n        ${HelpersChunk}\n        ${NoiseChunk}\n        ${vertexVariables}\n\n        void main() {\n          vec3 lamina_finalPosition = position;\n          vec3 lamina_finalNormal = normal;\n\n          ${vertexShader}\n\n          csm_Position = lamina_finalPosition;\n          csm_Normal = lamina_finalNormal;\n        }\n        `,\n      fragmentShader: `\n        ${HelpersChunk}\n        ${NoiseChunk}\n        ${BlendModesChunk}\n        ${fragmentVariables}\n\n        uniform vec3 u_lamina_color;\n        uniform float u_lamina_alpha;\n\n        void main() {\n          vec4 lamina_finalColor = vec4(u_lamina_color, u_lamina_alpha);\n\n          ${fragmentShader}\n\n          csm_DiffuseColor = lamina_finalColor;\n         \n        }\n        `\n    };\n  }\n\n  refresh() {\n    const {\n      uniforms,\n      fragmentShader,\n      vertexShader\n    } = this.genShaders();\n    super.update(fragmentShader, vertexShader, uniforms);\n  }\n\n  serialize() {\n    return {\n      constructor: 'LayerMaterial',\n      properties: {\n        color: this.baseColor,\n        alpha: this.alpha,\n        name: this.name,\n        lighting: this.lighting\n      }\n    };\n  }\n\n}\n\nexport { Abstract, Color, Depth, Displace, Fresnel, Gradient, LayerMaterial, Matcap, Noise, Normal, Texture };\n","/* jshint esversion: 9 */\n/* For dealing with spline curves */\n/* global THREE, AFRAME */\n\nimport { LayerMaterial } from 'lamina/vanilla';\nimport * as lamina from 'lamina/vanilla';\nconst kebabize = (str) => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? \"-\" : \"\") + $.toLowerCase())\n// const textureLoader = new THREE.TextureLoader();\nAFRAME.registerShader('lamina', {\n\tschema: {\n\t\tlayers: {\n\t\t\ttype: 'selector',\n\t\t\tdescription: 'Element that contains the layers, defautls to this element.'\n\t\t},\n\t\tcolor: {\n\t\t\ttype: 'color',\n\t\t\tdefault: 'white',\n\t\t\tdescription: 'Base color'\n\t\t},\n\t\talpha: {\n\t\t\tdefault: 1,\n\t\t\tdescription: 'Alpha'\n\t\t},\n\t\tlighting: {\n\t\t\toneOf: ['phong', 'physical', 'toon', 'basic', 'lambert', 'standard'],\n\t\t\tdefault: 'basic',\n\t\t\tdescription: 'Shading model to use.'\n\t\t}\n\t},\n\n\tinit: function (data) {\n\t\tconst layers = data.layers || this.el;\n\t\tthis.rendererSystem = this.el.sceneEl.systems.renderer;\n\t\tthis.material = new LayerMaterial({\n\t\t\tcolor: new THREE.Color(data.color).convertSRGBToLinear(),\n\t\t\tlayers: Array.from(layers.children).map(el => el.laminaLayer).filter(l => !!l),\n\t\t\tlighting: data.lighting\n\t\t});\n\t},\n\n\tupdate: function (data) {\n\t\tthis.material.color.set(data.color);\n\t\tthis.material.alpha = data.alpha;\n\t\tthis.material.lighting = data.lighting;\n\t\tthis.material.layers.splice(0);\n\t\tthis.material.needsUpdate = true;\n\t}\n});\n\nAFRAME.registerPrimitive('a-lamina', {\n\tmappings: {\n\t\tcolor: \"material.color\",\n\t\talpha: \"material.alpha\",\n\t\tlighting: \"material.lighting\",\n\t},\n\tdefaultComponents: {\n\t\tmaterial: \"shader:lamina;\"\n\t}\n});\n\nconst defaultSchema = {\n\tmode: {\n\t\tdefault: 'normal',\n\t\toneOf: [\n\t\t\t'normal',\n\t\t\t'divide',\n\t\t\t'add',\n\t\t\t'overlay',\n\t\t\t'subtract',\n\t\t\t'screen',\n\t\t\t'multiply',\n\t\t\t'softlight',\n\t\t\t'lighten',\n\t\t\t'reflect',\n\t\t\t'darken',\n\t\t\t'negation'\n\t\t]\n\t\t// blend mode\n\t},\n\tvisible: {\n\t\tdefault: true\n\t}\n};\n\nconst schemas = {};\nfor (const layer of [\n\t'Color',\n\t'Depth',\n\t'Fresnel',\n\t'Gradient',\n\t'Matcap',\n\t'Noise',\n\t'Normal',\n\t'Texture',\n\t'Displace'\n]) {\n\tconst schemaIn = new lamina[layer]().schema;\n\tconst schema = {};\n\tfor (const schemumIn of schemaIn) {\n\t\tconst schemum = Object.assign({}, schemumIn);\n\t\tif (!schemum.value && schemum.options) schemum.value = schemum.options[0];\n\t\tlet type = typeof schemum.value;\n\t\tif (type === \"object\") {\n\t\t\ttype = schemum.value.constructor.name;\n\t\t\tif (type === \"Vector3\") type = \"vec3\";\n\t\t\tif (type === \"Vector2\") type = \"vec1\";\n\t\t\tif (type === \"Matrix4\") type = \"mat4\";\n\t\t}\n\t\tif (schemum.label.startsWith('color')) {\n\t\t\ttype = 'color'\n\t\t}\n\t\tif (schemum.label.endsWith('Map') || schemum.label.endsWith('map')) {\n\t\t\ttype = 'map'\n\t\t}\n\t\tconst out = { type };\n\t\tif (schemum.value) out.default = schemum.value;\n\t\tif (schemum.options) out.oneOf = schemum.options;\n\t\tschema[schemum.label] = out;\n\t}\n\tschemas[layer] = schema;\n}\n\nfor (const [name, schemapart] of Object.entries(schemas)) {\n\tconst schema = Object.assign(Object.assign({}, defaultSchema), schemapart);\n\tAFRAME.registerComponent('lamina-' + name.toLowerCase(), {\n\t\tschema,\n\t\tinit() {\n\t\t\tconst config = {};\n\t\t\tconst self = this;\n\t\t\tfor (const [prop, value] of Object.entries(this.data)) {\n\t\t\t\tlet parsedVal = value;\n\t\t\t\tif (schema[prop].type === 'color') {\n\t\t\t\t\tparsedVal = new THREE.Color(value).convertSRGBToLinear();\n\t\t\t\t}\n\t\t\t\tif (schema[prop].type === 'map') {\n\t\t\t\t\tthis.el.sceneEl.systems.material.loadTexture(value, { src: value }, function textureLoaded (texture) {\n\t\t\t\t\t\tself.el.laminaLayer[prop] = texture;\n\t\t\t\t\t\tAFRAME.utils.material.handleTextureEvents(self.el, texture);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconfig[prop] = parsedVal;\n\t\t\t}\n\t\t\tconst layer = new lamina[name](config);\n\t\t\tthis.el.laminaLayer = layer;\n\t\t},\n\t\tupdate(oldData) {\n\t\t}\n\t})\n\t\n\tconst mappings = {};\n\tfor (const propName of Object.keys(schema)) {\n\t\tmappings[kebabize(propName)] = `${'lamina-' + name.toLowerCase()}.${propName}`\n\t}\n\tAFRAME.registerPrimitive('lamina-' + name.toLowerCase(), {\n\t\tmappings,\n\t\tdefaultComponents: {\n\t\t\t['lamina-' + name.toLowerCase()]: \"\"\n\t\t}\n\t})\n}\n"],"names":["v100","require$$0","builtins100","literals100","tokenize","ignoredKeywords","require$$1","require$$2","require$$3","Material","Color$1","Vector3","Vector2","Vector4","Matrix3","Matrix4","Texture$1","THREE","MathUtils","descope","tokenFunctions","stringify"],"mappings":"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A;AACA,CAAC,CAAC;EACF,MAAM,CAAC,cAAc,GAAG,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC;AACJ;EACA,IAAI,eAAe;AACnB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC,CAAC;AACF;EACA,IAAI,UAAU;AACdhB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAC,CAAC;AACF;EACA,MAAM,aAAa,SAAS,oBAAoB,CAAC;EACjD,E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"}